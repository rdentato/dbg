/* 
**  (C) by Remo Dentato (rdentato@gmail.com)
**
** This software is distributed under the terms of the MIT license:
**  https://opensource.org/licenses/MIT
**
**  *** DEBUG AND TESTING MACROS ***
**
**  dbgmsg(char *, ...)        --> Output a message on stderr (works as printf(...)).
**                                 If DEBUG is not defined, do nothing.
**
**  dbgchk(test, char *, ...)  --> Perform the test. If test fails and format string is not
**                                 NULL, prints a message on stderr (works as printf(...)).
**                                 If DEBUG is not defined, do nothing.
**
**  _dbgmsg(char *, ...)       --> Do nothing. Used to disable a debug message.
**
**  _dbgchk(test, char *, ...) --> Do nothing. Used to disable a debug message.
**
**  Note that NDEBUG has precedence over DEBUG
*/

#ifndef __DBG_H__
#define __DBG_H__

#ifdef NDEBUG
#ifdef DEBUG
#undef DEBUG
#endif
#endif

#ifdef DEBUG
#include <stdio.h>
#define dbgmsg(...)   ((fflush(stdout), \
                        fprintf(stderr,__VA_ARGS__), fflush(stderr)))

#define dbg0(_x0,...) _x0 
#define dbgchk(e,...) do {int e_=!!(e); \
                          fflush(stdout); /*Ensure dbg message appears after pending stdout prints */ \
                          fprintf(stderr,"%s: (%s)  %s:%d\n",(e_?"PASS":"FAIL"),#e,__FILE__,__LINE__); \
                          if ((!e_) && (dbg0(__VA_ARGS__,NULL))) {  \
                            fputs("    : ",stderr); fprintf(stderr,__VA_ARGS__); \
                          } \
                          fflush(stderr); \
                      } while(0)
#else
#define dbgmsg(...)
#define dbgchk(e,...)
#endif

#define _dbgmsg(...)
#define _dbgchk(e,...)

/*  ************ TEST SUITE *************
**  Compile with:
**     cp dbg.h dbg.c; gcc -DDEBUG -DDBG_TEST -o dbg_test 
*/

#ifdef DBG_TEST
int main(int argc, char *argv[])
{
  int x;
  dbgmsg("Test %s (argc: %d)\n","message 1",argc);

  x=0;
  dbgmsg("Testing (1>x) with x=%d\n",x);
  dbgchk(1>x,"x=%d\n",x);

  x=1;
  dbgmsg("Testing (1>x) with x=%d\n",x);
  dbgchk(1>x,"x=%d\n",x);

  x=2;
  dbgmsg("Testing (1>x) with x=%d\n",x);
  dbgchk(1>x,"x=%d\n",x);

  x=2;
  dbgmsg("Testing (1>x) with x=%d (no message on fail)\n",x);
  dbgchk(1>x,NULL);
}

#endif // DBG_TEST
#endif // DBG_H

